// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "scrape_service.proto" (package "scrape", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ScraperService } from "./scrape_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetScrapedResponse } from "./get_content_response";
import type { GetScrapeRequest } from "./get_content_request";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service scrape.ScraperService
 */
export interface IScraperServiceClient {
    /**
     * @generated from protobuf rpc: GetScrapedText
     */
    getScrapedText(input: GetScrapeRequest, options?: RpcOptions): UnaryCall<GetScrapeRequest, GetScrapedResponse>;
}
/**
 * @generated from protobuf service scrape.ScraperService
 */
export class ScraperServiceClient implements IScraperServiceClient, ServiceInfo {
    typeName = ScraperService.typeName;
    methods = ScraperService.methods;
    options = ScraperService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetScrapedText
     */
    getScrapedText(input: GetScrapeRequest, options?: RpcOptions): UnaryCall<GetScrapeRequest, GetScrapedResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetScrapeRequest, GetScrapedResponse>("unary", this._transport, method, opt, input);
    }
}
