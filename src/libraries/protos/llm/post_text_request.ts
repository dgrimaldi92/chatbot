// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "post_text_request.proto" (package "llm", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Prompt } from "./prompt";
import { ProtoType } from "./type";
/**
 * @generated from protobuf message llm.GenerateRequest
 */
export interface GenerateRequest {
    /**
     * @generated from protobuf field: llm.ProtoType type = 1
     */
    type: ProtoType;
    /**
     * @generated from protobuf field: llm.Prompt prompt = 2
     */
    prompt?: Prompt;
}
// @generated message type with reflection information, may provide speed optimized methods
class GenerateRequest$Type extends MessageType<GenerateRequest> {
    constructor() {
        super("llm.GenerateRequest", [
            { no: 1, name: "type", kind: "enum", T: () => ["llm.ProtoType", ProtoType] },
            { no: 2, name: "prompt", kind: "message", T: () => Prompt }
        ]);
    }
    create(value?: PartialMessage<GenerateRequest>): GenerateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.type = 0;
        if (value !== undefined)
            reflectionMergePartial<GenerateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateRequest): GenerateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* llm.ProtoType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* llm.Prompt prompt */ 2:
                    message.prompt = Prompt.internalBinaryRead(reader, reader.uint32(), options, message.prompt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* llm.ProtoType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* llm.Prompt prompt = 2; */
        if (message.prompt)
            Prompt.internalBinaryWrite(message.prompt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message llm.GenerateRequest
 */
export const GenerateRequest = new GenerateRequest$Type();
