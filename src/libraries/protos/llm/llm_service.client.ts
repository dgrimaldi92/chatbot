// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "llm_service.proto" (package "llm", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LLM } from "./llm_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GenerateResponse } from "./post_text_response";
import type { GenerateRequest } from "./post_text_request";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service llm.LLM
 */
export interface ILLMClient {
    /**
     * Simple generation call
     *
     * @generated from protobuf rpc: GenerateText
     */
    generateText(input: GenerateRequest, options?: RpcOptions): UnaryCall<GenerateRequest, GenerateResponse>;
}
/**
 * @generated from protobuf service llm.LLM
 */
export class LLMClient implements ILLMClient, ServiceInfo {
    typeName = LLM.typeName;
    methods = LLM.methods;
    options = LLM.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Simple generation call
     *
     * @generated from protobuf rpc: GenerateText
     */
    generateText(input: GenerateRequest, options?: RpcOptions): UnaryCall<GenerateRequest, GenerateResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateRequest, GenerateResponse>("unary", this._transport, method, opt, input);
    }
}
