# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: llm_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import protos.post_text_request_pb2 as post_text_request_pb2
import protos.post_text_response_pb2 as post_text_response_pb2
import protos.llm_service_pb2 as llm_service_pb2
class LLMBase(abc.ABC):

    @abc.abstractmethod
    async def GenerateText(self, stream: 'grpclib.server.Stream[post_text_request_pb2.GenerateRequest, post_text_response_pb2.GenerateResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/llm.LLM/GenerateText': grpclib.const.Handler(
                self.GenerateText,
                grpclib.const.Cardinality.UNARY_UNARY,
                post_text_request_pb2.GenerateRequest,
                post_text_response_pb2.GenerateResponse,
            ),
        }


class LLMStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GenerateText = grpclib.client.UnaryUnaryMethod(
            channel,
            '/llm.LLM/GenerateText',
            post_text_request_pb2.GenerateRequest,
            post_text_response_pb2.GenerateResponse,
        )
