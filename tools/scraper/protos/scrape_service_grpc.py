# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: scrape_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import protos.get_content_request_pb2 as get_content_request_pb2
import protos.get_content_response_pb2 as get_content_response_pb2
import protos.scrape_service_pb2 as scrape_service_pb2
class ScraperServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetScrapedText(self, stream: 'grpclib.server.Stream[get_content_request_pb2.GetScrapeRequest, get_content_response_pb2.GetScrapedResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/scrape.ScraperService/GetScrapedText': grpclib.const.Handler(
                self.GetScrapedText,
                grpclib.const.Cardinality.UNARY_UNARY,
                get_content_request_pb2.GetScrapeRequest,
                get_content_response_pb2.GetScrapedResponse,
            ),
        }


class ScraperServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetScrapedText = grpclib.client.UnaryUnaryMethod(
            channel,
            '/scrape.ScraperService/GetScrapedText',
            get_content_request_pb2.GetScrapeRequest,
            get_content_response_pb2.GetScrapedResponse,
        )
